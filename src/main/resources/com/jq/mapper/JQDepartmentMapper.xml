<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jq.mapper.JQDepartmentMapper">
    
    <resultMap type="com.jq.entity.JQDepartment" id="JQDepartmentResult" >
        <result property="id"    column="id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="parentid"    column="parentid"    />
    </resultMap>

    <sql id="selectJQDepartmentVo">
        select id, dept_name, update_time, update_by, parentid from sys_department
    </sql>

    <select id="selectJQDepartmentList" resultType="java.util.HashMap">
        SELECT d.id,d.dept_name as deptName ,d.update_by as updateBy,date_format(ifnull(d.update_time,d.create_time),'%Y-%m-%d %H:%i:%s') AS updateTime,d.parentid,IFNULL(u.sum ,0) AS sum FROM sys_department d LEFT JOIN (
        SELECT dept_code,count(1) AS sum FROM sys_user WHERE 1=1 GROUP BY dept_code) u ON d.id=u.dept_code
        <where>
            <if test="deptName != null  and deptName != ''"> and d.dept_name like concat('%', #{deptName}, '%')</if>
            <if test="parentId != null  and parentId != ''"> and d.parentid =#{parentId}</if>
            <if test="ids != null  and ids != ''"> and d.id in
                <foreach collection="ids" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            </if>
        </where>
    </select>

    <select id="selectJQDepartmentListByIds" resultType="java.util.HashMap">
        SELECT d.id,d.dept_name as deptName ,d.update_by as updateBy,date_format(ifnull(d.update_time,d.create_time),'%Y-%m-%d %H:%i:%s') AS updateTime,d.parentid,IFNULL(u.sum ,0) AS sum FROM sys_department d LEFT JOIN (
        SELECT dept_code,count(1) AS sum FROM sys_user WHERE 1=1 GROUP BY dept_code) u ON d.id=u.dept_code
    where d.id in
     <foreach collection="list" item="ids" open="(" close=")" separator=",">
        #{ids}
    </foreach>
    </select>
    <select id="selectJQDepartmentById" parameterType="Long" resultMap="JQDepartmentResult">
        <include refid="selectJQDepartmentVo"/>
        where id = #{id}
    </select>

    <select id="selectJQDepartmentByName" parameterType="String" resultMap="JQDepartmentResult">
        <include refid="selectJQDepartmentVo"/>
        where dept_name like concat('%', #{deptName}, '%')
    </select>
    <select id="selectJQDepartmentByPId" parameterType="Long" resultMap="JQDepartmentResult">
        <include refid="selectJQDepartmentVo"/>
        where parentid = #{parentId}
    </select>

    <insert id="insertJQDepartment">
        insert into sys_department(dept_name,update_time,update_by,parentid)
        select #{deptName},sysdate(),#{updateBy},#{parentid}
        from dual
        where not exists(select * from sys_department where dept_name=#{deptName})
    </insert>

    <update id="updateJQDepartment">
        update sys_department
        set
           dept_name = #{deptName},
           update_time = sysdate(),
           update_by = #{updateBy},
           parentid = #{parentid}
           where id = #{id}
    </update>

    <delete id="deleteJQDepartmentById" parameterType="Long">
        delete from sys_department where id = #{id}
    </delete>

    <select id="checkDeptNameUnique" resultMap="JQDepartmentResult">
        <include refid="selectJQDepartmentVo"/>
        where dept_name=#{deptName} and parent_id = #{parentId}
    </select>


    
</mapper>