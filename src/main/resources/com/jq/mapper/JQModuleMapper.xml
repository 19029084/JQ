<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
	
<mapper namespace="com.jq.mapper.JQModuleMapper">

	<resultMap id="JQModule" type="com.jq.entity.JQModule">
	<id property="id" column="id"/>
	<result property="name" column="name" />
	<result property="path" column="path" />
	</resultMap>

	<select id="getModules" resultMap="JQModule">	
		select m.id as id,m.name as name,u.url as path 
		from Module m left join sys_url u on (m.urlid=u.id)
		where m.parentid= #{pid} and m.Valid = 1
	</select>
	
	<select id="getModuleByName" resultMap="JQModule">
		select m.id as id,m.name as name,u.url as path 
		from Module m left join sys_url u on (m.urlid=u.id)
		where m.parentid= #{pid} and m.Valid = 1 and m.name=#{name}
	</select>
	
	
	<insert id="createModule" keyProperty="module.id" useGeneratedKeys="true" >
		insert into Module(name,parentid,urlid,valid) 
		select #{module.name},#{pid},#{urlId},1
		from dual 
		where not exists(select * from Module where name=#{module.name})
	</insert>
	
	<update id="updateModule">
		update Module set name=#{module.name},urlid=#{urlId} where parentid=#{pid} and id=#{module.id}
	</update>
	
	<update id="deleteModule">
		update Module set Valid = 0 where parentid=#{pid} and id=#{module.id}
	</update>
	
	<resultMap id="JQModuleConfig" type="com.jq.entity.JQModuleConfig">
		
		<result property="configId" column="configId" />
		<result property="moduleId" column="moduleId" />
		
		
	</resultMap>	
	
	
	
	<select id="getModuleConfig" resultMap="JQModuleConfig">	
		select distinct moduleId,configId
		from ModuleConfig mc
		where mc.moduleid= #{mid} and mc.valid = 1
	</select>
	
	<insert id="addModuleConfig">
		insert into ModuleConfig(ModuleId,PropertyId,ConfigId,Valid) 
		select #{mid},#{propertyId},#{configId},1
		from dual
		where not exists (select * from ModuleConfig 
				   where ModuleId = #{mid} and PropertyId=#{propertyId} and ConfigId=#{configId})
	</insert>
	
	<update id="deleteModuleConfig">	
		update ModuleConfig set valid=0 where ModuleId=#{mid} and ConfigId= #{config.configId}
	</update>
	
	<resultMap id="JQColumn" type="com.jq.mapper.JQColumn">
		<id property="id" column="id"/>
		
		<result property="rowId" column="rowId" />
		<result property="propertyId" column="propertyId" />
		<result property="value" column="value" />
		<result property="name" column="name" />
		<result property="type" column="type" />	
	</resultMap>
	
	<select id="getModuleData" resultMap="JQColumn">
		select md.parentId as rowId, md.data as value, mc.propertyid as id,prop.name as name, prop.type as type 
		from ModuleData md,ModuleConfig mc,Property prop 
		where mc.moduleid = #{mid} and mc.id = md.fieldId and mc.configId=#{configId} and prop.id=mc.propertyid
		order by md.parentId	
	</select>
	
	<insert id="addModuleData">
		Insert into ModuleData(FieldID,ParentID,Data) 
		select mc.ID as fieldID,#{parentId},#{property.value}
		from ModuleConfig mc,Property prop
		where configID=#{configId} and moduleID=#{mid} and PropertyID=prop.id and prop.name=#{property.name}
		
	</insert>
	
	
	<update id="updateModuleData">
	
		update ModuleData set Data=#{property.value} 
		
		where RID=#{rowId} and ModuleID=#{mid} and PropertyID = #{property.id}
	
	</update>
	
	
	<delete id="deleteModuleData">
		delete from ModuleData
		where RID=#{rowId} and ModuleID=#{mid} and PropertyID = #{property.id}	
	</delete>
	
	<select id="getTotalQuantity" resultType="int">
		select count(distinct md.parentId)
		from ModuleConfig mc, ModuleData md
		where mc.id=md.fieldid and mc.moduleId=#{mid} and mc.configId=#{configId} 
	
	</select>
	
	
	

	
	
	




</mapper>	



